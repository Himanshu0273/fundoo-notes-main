"""Add expires_at and is_expired columns

Revision ID: dbeb46fca5a0
Revises: 59334e32821a
Create Date: 2025-06-15 18:37:30.632118

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dbeb46fca5a0'
down_revision: Union[str, None] = '59334e32821a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('notes', sa.Column('expires_at', sa.DateTime(), nullable=True, server_default=sa.text("'2025-01-01 00:00:00'")))
    op.add_column('notes', sa.Column('is_expired', sa.Boolean(), nullable=True, server_default=sa.text("false")))

    # Step 2: Then alter to set NOT NULL constraint
    op.alter_column('notes', 'expires_at', nullable=False)
    op.alter_column('notes', 'is_expired', nullable=False)

    # Optionally remove the server default if you don't want it kept
    op.alter_column('notes', 'expires_at', server_default=None)
    op.alter_column('notes', 'is_expired', server_default=None)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'secret_key',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index(op.f('ix_notes_title'), table_name='notes')
    op.create_index(op.f('ix_notes_id'), 'notes', ['id'], unique=False)
    op.alter_column('notes', 'created_at',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column('notes', 'body',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('notes', 'is_expired')
    op.drop_column('notes', 'expires_at')
    op.drop_constraint(None, 'labels', type_='foreignkey')
    op.drop_index(op.f('ix_labels_id'), table_name='labels')
    op.alter_column('labels', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
